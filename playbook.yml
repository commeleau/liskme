---
  - name: Configuration for Lisk with Ansible
    hosts: all
    become: True
    vars:
      - lisk_db: lisk_test
      - nodejs_version: "4.x"
      - nodejs_npm_global_packages:
        - name: forever
      - mongodb_net_bindip: 0.0.0.0
      - postgresql_version: 9.5
      - postgresql_listen_addresses:
        - '*'
      - postgresql_pg_hba_trust_hosts:
        - '10.0.0.0/8'
      - postgresql_databases:
        - name: "{{ lisk_db }}"
          owner: lisk          # optional; specify the owner of the database
          hstore: yes         # flag to install the hstore extension on this database (yes/no)
          uuid_ossp: yes      # flag to install the uuid-ossp extension on this database (yes/no)
          citext: yes         # flag to install the citext extension on this database (yes/no)
        - name: vagrant
          owner: vagrant          # optional; specify the owner of the database
          hstore: yes         # flag to install the hstore extension on this database (yes/no)
          uuid_ossp: yes      # flag to install the uuid-ossp extension on this database (yes/no)
          citext: yes         # flag to install the citext extension on this database (yes/no)
      - postgresql_user_privileges:
        - name: vagrant                   # user name
          db: "{{ lisk_db }}"                  # database
          priv: "ALL"                 # privilege string format: example: INSERT,UPDATE/table:SELECT/anothertable:ALL
        - name: lisk                   # user name
          db: "{{ lisk_db }}"                  # database
          priv: "ALL"                 # privilege string format: example: INSERT,UPDATE/table:SELECT/anothertable:ALL
        # List of database extensions to be created (optional)
      - postgresql_database_extensions:
        - db: "{{ lisk_db }}"
          extensions:
            - hstore
            - citext

# List of users to be created (optional)
      - postgresql_users:
        - name: lisk
          pass: lisk
          encrypted: no       # denotes if the password is already encrypted.
        - name: vagrant
          pass: vagrant
          encrypted: no

    roles:
      - ANXS.postgresql
      - geerlingguy.nodejs
      - lisk
      - greendayonfire.mongodb
    tasks:
      - name: locale
        locale_gen: name=en_US.UTF-8 state=present
      - name: dev locale
        action: command sudo update-locale LC_ALL=en_US.UTF-8
      - name: set default locale
        become: yes
        lineinfile: dest=/etc/default/locale
          regexp="LC_ALL"
          line="LC_ALL=\"en_US.UTF-8\""
